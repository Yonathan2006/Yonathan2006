{"version":3,"sources":["comps/res/Icon.jsx","comps/Theme.jsx","comps/ContactsPage.jsx","comps/Favorites.jsx","comps/AddContactPage.jsx","comps/NavBar.jsx","comps/App.jsx","index.js"],"names":["Icon","props","className","icon","id","style","display","padding","color","fontSize","size","transition","float","Theme","light","onClick","setTheme","margin","ContactsPage","contacts","theme","map","contact","Alert","variant","Heading","name","arr","filter","c","setContacts","localStorage","setItem","JSON","stringify","handleDelete","number","Favorites","favorites","fav","AddContactPage","nameInput","useRef","numberInput","useState","isFav","setIsFav","InputGroup","Prepend","Text","FormControl","placeholder","aria-label","aria-describedby","ref","Form","Check","textAlign","block","label","type","checked","onChange","Button","concat","current","value","ons","notification","alert","setNewContact","NavBarIcon","ids","setPage","handleClick","e","target","NavBar","pages","getItem","res","parse","ContactsApp","isPage","page","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbb8c00e.chunk.js","sourcesContent":["function Icon(props) {\r\n  return (\r\n    <i className={`bi bi-${props.icon}`}\r\n       id={`icon-${props.id}`}\r\n       style={{\r\n        display: 'block',\r\n        padding: props.padding,\r\n        color: props.color,\r\n        fontSize: props.size,\r\n        transition: '1s',\r\n        float: props.float,\r\n      }}\r\n    >\r\n    </i>\r\n  )\r\n}\r\nexport default Icon\r\n","import Icon from './res/Icon.jsx'\r\nimport './styles/Theme.scss'\r\n\r\n\r\nfunction Theme(props) {\r\n  var color = props.light ? 'black' : 'white'\r\n  var icon = props.light ? 'moon-stars-fill' : 'sun-fill'\r\n\r\n  const handleClick = () => {\r\n    if(props.light) {\r\n      props.setTheme('dark')\r\n    }else{\r\n      props.setTheme('light')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"Theme text-center\">\r\n        <span className=\"Toggler\" onClick={handleClick}>\r\n          <Icon\r\n            icon={icon}\r\n            color={color}\r\n            margin=\"5px\"\r\n            size=\"40px\"\r\n            float=\"left\"\r\n            id=\"theme\"\r\n          />\r\n        </span>\r\n    </div>\r\n  )\r\n}\r\nexport default Theme\r\n","import './styles/ContactsPage.scss'\r\nimport {Alert} from 'react-bootstrap'\r\nimport Icon from './res/Icon.jsx'\r\n\r\nfunction ContactsPage(props) {\r\n  const contacts = props.contacts\r\n  var theme = props.theme\r\n  function handleDelete(name) {\n    const arr = contacts.filter(c => c.name !== name)\r\n    props.setContacts(arr)\r\n    localStorage.setItem('contacts',JSON.stringify(arr))\r\n  }\r\n  return (\r\n    <div className=\"ContactsPage text-center\">\r\n      <header>\r\n        <Icon padding=\"10px\"\r\n        size=\"50px\"\r\n        icon=\"people\"/>\r\n        <h1 className=\"display-3\">Contactos</h1>\r\n      </header>\r\n      <div className=\"contacts\">\r\n        {\r\n          contacts.map((contact,id) =>\r\n              <Alert variant={theme} key={id} className=\"contact\">\r\n                <Alert.Heading>\r\n                  <Icon icon=\"person-fill\" id=\"face\"/>\r\n                  {contact.name}\r\n                  <span onClick={() => {\r\n                    handleDelete(contact.name)\r\n                  }}>\r\n                    <Icon icon=\"x-lg\" id=\"delete\"/>\r\n                  </span>\r\n                </Alert.Heading>\r\n                <hr/>\r\n                <b className=\"mb-0\">{contact.number}</b>\r\n              </Alert>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default ContactsPage\r\n","import Icon from './res/Icon'\r\nimport {Alert} from 'react-bootstrap'\r\n\r\n\r\nfunction Favorites(props) {\r\n  const favorites = props.contacts.filter(c => c.fav === true)\r\n  const theme = props.theme\r\n\r\n  function handleDelete(name) {\r\n    const arr = props.contacts.filter(c => c.name !== name)\r\n    props.setContacts(arr)\r\n    localStorage.setItem('contacts',JSON.stringify(arr))\r\n  }\r\n\r\n  return (\r\n    <div className=\"Favorites text-center\">\r\n      <Icon padding=\"10px\"\r\n      size=\"50px\"\r\n      icon=\"heart\"/>\r\n      <h1 className=\"display-3\"> Favoritos </h1>\r\n      <div className=\"favorite\">\r\n        {\r\n          favorites.map((fav,id) =>\r\n          <Alert variant={theme} key={id} className=\"contact\">\r\n            <Alert.Heading>\r\n              <Icon icon=\"person-fill\" id=\"face\"/>\r\n              {fav.name}\r\n              <span onClick={() => {\r\n                handleDelete(fav.name)\r\n              }}>\r\n                <Icon icon=\"x-lg\" id=\"delete\"/>\r\n              </span>\r\n            </Alert.Heading>\r\n            <hr/>\r\n            <b className=\"mb-0\">{fav.number}</b>\r\n          </Alert>\r\n        )\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Favorites\r\n","import './styles/AddContactPage.scss'\r\nimport Icon from './res/Icon.jsx'\r\nimport {useRef,useState} from 'react'\r\nimport {InputGroup,FormControl,Button,Form} from 'react-bootstrap'\r\nimport ons from 'onsenui'\r\nimport 'onsenui/css/onsenui.css';\r\nimport 'onsenui/css/onsen-css-components.css';\r\n\r\nfunction AddContactPage(props) {\r\n  const contacts = props.contacts\r\n  const nameInput = useRef(null)\r\n  const numberInput = useRef(null)\r\n  const[isFav,setIsFav] = useState(false)\r\n  const getFav = () => isFav;\r\n  var theme = props.theme\r\n\r\n  function setNewContact(name,number,fav) {\r\n    if(name !== '' && number !== '') {\r\n      var arr = [{\r\n        name,\r\n        number,\r\n        fav: getFav()\r\n      }]\r\n      props.setContacts((contacts) => {\r\n        return contacts.concat(arr)\r\n      })\r\n      localStorage.setItem('contacts',JSON.stringify(contacts.concat(arr)))\r\n      nameInput.current.value = ''\r\n      numberInput.current.value = ''\r\n      setIsFav(false)\r\n      ons.notification.alert(`\r\n        Contacto Creado!\r\n      `)\r\n    } else {\r\n      ons.notification.alert(`\r\n        Ingrese el nombre del contacto\r\n        y su número\r\n      `)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"AddContactPage text-center\">\r\n      <Icon\r\n        padding=\"10px\"\r\n        size=\"50px\"\r\n        icon=\"person-plus\"\r\n      />\r\n      <h1 className=\"AddContact display-4\">Nuevo Contacto</h1>\r\n      <br/>\r\n      <br/>\r\n      <InputGroup className=\"mb-3\">\r\n        <InputGroup.Prepend>\r\n          <InputGroup.Text>\r\n            <Icon icon=\"person-fill\"></Icon>\r\n          </InputGroup.Text>\r\n        </InputGroup.Prepend>\r\n        <FormControl\r\n          placeholder=\"Nombre y Apellidos\"\r\n          aria-label=\"Nombre i Apellidos\"\r\n          aria-describedby=\"Username\"\r\n          ref={nameInput}\r\n        />\r\n        </InputGroup>\r\n        <InputGroup className=\"mb-3\">\r\n          <InputGroup.Prepend>\r\n        <InputGroup.Text>\r\n          <Icon icon=\"hash\"></Icon>\r\n        </InputGroup.Text>\r\n      </InputGroup.Prepend>\r\n      <FormControl\r\n        placeholder=\"Número\"\r\n        aria-label=\"Número de Usuario\"\r\n        aria-describedby=\"user number\"\r\n        ref={numberInput}\r\n        />\r\n      </InputGroup>\r\n      <Form.Check\r\n        style = {{\r\n          textAlign: 'left',\r\n        }}\r\n        block=\"true\"\r\n        label=\"Añadir a Favoritos\"\r\n        type=\"checkbox\"\r\n        checked={isFav}\r\n        onChange={() => setIsFav(!isFav)}\r\n      />\r\n      <br/><br/>\r\n      <Button variant={theme}\r\n        onClick={()=> setNewContact(\r\n                        nameInput.current.value,\r\n                        numberInput.current.value,\r\n                        isFav\r\n                      )}>\r\n        <Icon size=\"40px\" icon=\"person-check\"/>\r\n        Guardar Contacto\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\nexport default AddContactPage\r\n","import Icon from './res/Icon.jsx'\r\nimport './styles/NavBar.scss'\r\n\r\nfunction NavBar(props) {\r\n  const setPage = props.setPage\r\n  var color = props.light ? 'black' : 'white'\r\n  const size = '40px'\r\n\r\n  return (\r\n    <div className=\"NavBar text-center\">\r\n      <NavBarIcon\r\n        type=\"AddContact\"\r\n        color={color}\r\n        size={size}\r\n        float=\"right\"\r\n        setPage={setPage}\r\n        pages={props.pages}\r\n      />\r\n      <NavBarIcon\r\n        type=\"Contacts\"\r\n        color={color}\r\n        size={size}\r\n        float=\"right\"\r\n        setPage={setPage}\r\n        pages={props.pages}\r\n      />\r\n      <NavBarIcon\r\n        type=\"Favorites\"\r\n        color={color}\r\n        size={size}\r\n        float=\"right\"\r\n        setPage={setPage}\r\n        pages={props.pages}\r\n      />\r\n\r\n    </div>\r\n  )\r\n}\r\nfunction NavBarIcon(props) {\r\n  const type = props.type\r\n  const color = props.color\r\n  const float = props.float\r\n  const ids = ['fav','all','add']\r\n  const setPage = props.setPage\r\n  const size = props.size;\r\n\r\n  function handleClick(e) {\r\n      if(e.target.id === 'icon-fav') setPage(\"Favorites\");\r\n      if(e.target.id === 'icon-all') setPage(\"ContactsPage\");\r\n      if(e.target.id === 'icon-add') setPage(\"AddContactPage\");\r\n  }\r\n\r\n  switch (type) {\r\n    case 'Contacts':\r\n      return (\r\n        <span onClick={handleClick} id={ids[1]}>\r\n          <Icon\r\n            icon=\"people-fill\"\r\n            color={color}\r\n            size={size}\r\n            float={float}\r\n            id={ids[1]}\r\n          />\r\n        </span>\r\n      )\r\n    case 'Favorites':\r\n      return (\r\n        <span onClick={handleClick} id={ids[0]}>\r\n          <Icon\r\n            icon=\"heart-fill\"\r\n            color={color}\r\n            size={size}\r\n            float={float}\r\n            id={ids[0]}\r\n          />\r\n        </span>\r\n      )\r\n    case 'AddContact':\r\n      return (\r\n        <span onClick={handleClick} id={ids[2]}>\r\n          <Icon\r\n            icon=\"person-plus-fill\"\r\n            color={color}\r\n            size={size}\r\n            float={float}\r\n            id={ids[2]}\r\n          />\r\n        </span>\r\n      )\r\n    default: return (<p>Not found</p>)\r\n  }\r\n}\r\nexport default NavBar\r\n","import React,{Fragment,useState} from 'react'\r\nimport Theme from './Theme'\r\nimport ContactsPage from './ContactsPage'\r\nimport Favorites from './Favorites'\r\nimport AddContactPage from './AddContactPage'\r\nimport NavBar from './NavBar'\r\nimport './styles/App.scss'\r\nimport './styles/DarkTheme.scss'\r\nimport './styles/LightTheme.scss'\r\n\r\nvar data = [\r\n  {\r\n    name: \"Nombre del contacto\",\r\n    number: 'Número del contacto',\r\n    fav: true,\r\n  },\r\n]\r\n\r\nif(localStorage.getItem('contacts') === null)\r\n  localStorage.setItem('contacts',JSON.stringify(data));\r\n\r\nvar res = JSON.parse(localStorage.getItem('contacts'))\r\n\r\nconst ContactsApp = (props) => {\r\n  const[page,setPage] = useState(\"ContactsPage\")\r\n  const[theme,setTheme] = useState('dark')\r\n  const[contacts,setContacts] = useState(res)\r\n\r\n  var isPage ;\r\n  switch (page) {\r\n    case 'ContactsPage':\r\n      isPage = <ContactsPage\r\n        contacts={contacts}\r\n        theme={theme}\r\n        setContacts={setContacts}/>\r\n      break\r\n    case 'Favorites':\r\n      isPage = <Favorites\r\n        contacts={contacts}\r\n        theme={theme}\r\n        setContacts={setContacts}/>\r\n      break\r\n    case 'AddContactPage':\r\n      isPage = <AddContactPage\r\n        contacts={contacts}\r\n        setContacts={setContacts}\r\n        theme={theme}/>\r\n      break\r\n    default:\r\n      isPage = <ContactsPage\r\n        contacts={contacts}\r\n        theme={theme}/>\r\n  }\r\n  const pages = [\r\n            <ContactsPage/>,\r\n            <Favorites/>,\r\n            <AddContactPage/>]\r\n  var light;\r\n\r\n  if(theme === 'dark') {\r\n    light = false\r\n  }else{\r\n    light = true\r\n  }\r\n\r\n  return (\r\n    <div className={`bg-${theme} App text-${light ? 'dark' : 'light'}`}>\r\n      <>{isPage}</>\r\n      <div className={`options ${theme}`}>\r\n        <Theme theme={theme} light={light} setTheme={setTheme}/>\r\n        <NavBar pages={pages} setPage={setPage} light={light}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default ContactsApp;\r\n","\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport ContactsApp from './comps/App'\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ContactsApp></ContactsApp>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}